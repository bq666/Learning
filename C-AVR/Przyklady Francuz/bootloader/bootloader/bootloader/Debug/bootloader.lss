
bootloader.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800200  0001f112  00000186  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000112  0001f000  0001f000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .comment      00000030  00000000  00000000  00000186  2**0
                  CONTENTS, READONLY
  3 .debug_aranges 00000038  00000000  00000000  000001b6  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_info   000000d1  00000000  00000000  000001ee  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_abbrev 00000085  00000000  00000000  000002bf  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_line   0000008d  00000000  00000000  00000344  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_frame  00000054  00000000  00000000  000003d4  2**2
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_str    00000151  00000000  00000000  00000428  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_loc    00000025  00000000  00000000  00000579  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_ranges 00000028  00000000  00000000  0000059e  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

0001f000 <__vectors>:
   1f000:	75 c0       	rjmp	.+234    	; 0x1f0ec <__ctors_end>
   1f002:	00 00       	nop
   1f004:	7d c0       	rjmp	.+250    	; 0x1f100 <__bad_interrupt>
   1f006:	00 00       	nop
   1f008:	7b c0       	rjmp	.+246    	; 0x1f100 <__bad_interrupt>
   1f00a:	00 00       	nop
   1f00c:	79 c0       	rjmp	.+242    	; 0x1f100 <__bad_interrupt>
   1f00e:	00 00       	nop
   1f010:	77 c0       	rjmp	.+238    	; 0x1f100 <__bad_interrupt>
   1f012:	00 00       	nop
   1f014:	75 c0       	rjmp	.+234    	; 0x1f100 <__bad_interrupt>
   1f016:	00 00       	nop
   1f018:	73 c0       	rjmp	.+230    	; 0x1f100 <__bad_interrupt>
   1f01a:	00 00       	nop
   1f01c:	71 c0       	rjmp	.+226    	; 0x1f100 <__bad_interrupt>
   1f01e:	00 00       	nop
   1f020:	6f c0       	rjmp	.+222    	; 0x1f100 <__bad_interrupt>
   1f022:	00 00       	nop
   1f024:	6d c0       	rjmp	.+218    	; 0x1f100 <__bad_interrupt>
   1f026:	00 00       	nop
   1f028:	6b c0       	rjmp	.+214    	; 0x1f100 <__bad_interrupt>
   1f02a:	00 00       	nop
   1f02c:	69 c0       	rjmp	.+210    	; 0x1f100 <__bad_interrupt>
   1f02e:	00 00       	nop
   1f030:	67 c0       	rjmp	.+206    	; 0x1f100 <__bad_interrupt>
   1f032:	00 00       	nop
   1f034:	65 c0       	rjmp	.+202    	; 0x1f100 <__bad_interrupt>
   1f036:	00 00       	nop
   1f038:	63 c0       	rjmp	.+198    	; 0x1f100 <__bad_interrupt>
   1f03a:	00 00       	nop
   1f03c:	61 c0       	rjmp	.+194    	; 0x1f100 <__bad_interrupt>
   1f03e:	00 00       	nop
   1f040:	5f c0       	rjmp	.+190    	; 0x1f100 <__bad_interrupt>
   1f042:	00 00       	nop
   1f044:	5d c0       	rjmp	.+186    	; 0x1f100 <__bad_interrupt>
   1f046:	00 00       	nop
   1f048:	5b c0       	rjmp	.+182    	; 0x1f100 <__bad_interrupt>
   1f04a:	00 00       	nop
   1f04c:	59 c0       	rjmp	.+178    	; 0x1f100 <__bad_interrupt>
   1f04e:	00 00       	nop
   1f050:	57 c0       	rjmp	.+174    	; 0x1f100 <__bad_interrupt>
   1f052:	00 00       	nop
   1f054:	55 c0       	rjmp	.+170    	; 0x1f100 <__bad_interrupt>
   1f056:	00 00       	nop
   1f058:	53 c0       	rjmp	.+166    	; 0x1f100 <__bad_interrupt>
   1f05a:	00 00       	nop
   1f05c:	51 c0       	rjmp	.+162    	; 0x1f100 <__bad_interrupt>
   1f05e:	00 00       	nop
   1f060:	4f c0       	rjmp	.+158    	; 0x1f100 <__bad_interrupt>
   1f062:	00 00       	nop
   1f064:	4d c0       	rjmp	.+154    	; 0x1f100 <__bad_interrupt>
   1f066:	00 00       	nop
   1f068:	4b c0       	rjmp	.+150    	; 0x1f100 <__bad_interrupt>
   1f06a:	00 00       	nop
   1f06c:	49 c0       	rjmp	.+146    	; 0x1f100 <__bad_interrupt>
   1f06e:	00 00       	nop
   1f070:	47 c0       	rjmp	.+142    	; 0x1f100 <__bad_interrupt>
   1f072:	00 00       	nop
   1f074:	45 c0       	rjmp	.+138    	; 0x1f100 <__bad_interrupt>
   1f076:	00 00       	nop
   1f078:	43 c0       	rjmp	.+134    	; 0x1f100 <__bad_interrupt>
   1f07a:	00 00       	nop
   1f07c:	41 c0       	rjmp	.+130    	; 0x1f100 <__bad_interrupt>
   1f07e:	00 00       	nop
   1f080:	3f c0       	rjmp	.+126    	; 0x1f100 <__bad_interrupt>
   1f082:	00 00       	nop
   1f084:	3d c0       	rjmp	.+122    	; 0x1f100 <__bad_interrupt>
   1f086:	00 00       	nop
   1f088:	3b c0       	rjmp	.+118    	; 0x1f100 <__bad_interrupt>
   1f08a:	00 00       	nop
   1f08c:	39 c0       	rjmp	.+114    	; 0x1f100 <__bad_interrupt>
   1f08e:	00 00       	nop
   1f090:	37 c0       	rjmp	.+110    	; 0x1f100 <__bad_interrupt>
   1f092:	00 00       	nop
   1f094:	35 c0       	rjmp	.+106    	; 0x1f100 <__bad_interrupt>
   1f096:	00 00       	nop
   1f098:	33 c0       	rjmp	.+102    	; 0x1f100 <__bad_interrupt>
   1f09a:	00 00       	nop
   1f09c:	31 c0       	rjmp	.+98     	; 0x1f100 <__bad_interrupt>
   1f09e:	00 00       	nop
   1f0a0:	2f c0       	rjmp	.+94     	; 0x1f100 <__bad_interrupt>
   1f0a2:	00 00       	nop
   1f0a4:	2d c0       	rjmp	.+90     	; 0x1f100 <__bad_interrupt>
   1f0a6:	00 00       	nop
   1f0a8:	2b c0       	rjmp	.+86     	; 0x1f100 <__bad_interrupt>
   1f0aa:	00 00       	nop
   1f0ac:	29 c0       	rjmp	.+82     	; 0x1f100 <__bad_interrupt>
   1f0ae:	00 00       	nop
   1f0b0:	27 c0       	rjmp	.+78     	; 0x1f100 <__bad_interrupt>
   1f0b2:	00 00       	nop
   1f0b4:	25 c0       	rjmp	.+74     	; 0x1f100 <__bad_interrupt>
   1f0b6:	00 00       	nop
   1f0b8:	23 c0       	rjmp	.+70     	; 0x1f100 <__bad_interrupt>
   1f0ba:	00 00       	nop
   1f0bc:	21 c0       	rjmp	.+66     	; 0x1f100 <__bad_interrupt>
   1f0be:	00 00       	nop
   1f0c0:	1f c0       	rjmp	.+62     	; 0x1f100 <__bad_interrupt>
   1f0c2:	00 00       	nop
   1f0c4:	1d c0       	rjmp	.+58     	; 0x1f100 <__bad_interrupt>
   1f0c6:	00 00       	nop
   1f0c8:	1b c0       	rjmp	.+54     	; 0x1f100 <__bad_interrupt>
   1f0ca:	00 00       	nop
   1f0cc:	19 c0       	rjmp	.+50     	; 0x1f100 <__bad_interrupt>
   1f0ce:	00 00       	nop
   1f0d0:	17 c0       	rjmp	.+46     	; 0x1f100 <__bad_interrupt>
   1f0d2:	00 00       	nop
   1f0d4:	15 c0       	rjmp	.+42     	; 0x1f100 <__bad_interrupt>
   1f0d6:	00 00       	nop
   1f0d8:	13 c0       	rjmp	.+38     	; 0x1f100 <__bad_interrupt>
   1f0da:	00 00       	nop
   1f0dc:	11 c0       	rjmp	.+34     	; 0x1f100 <__bad_interrupt>
   1f0de:	00 00       	nop
   1f0e0:	0f c0       	rjmp	.+30     	; 0x1f100 <__bad_interrupt>
	...

0001f0e4 <jumptable>:
}

void jumptable() __attribute__((section(".vectors"), naked));
void jumptable()
{
	asm("jmp bfunc1");	//Udostêpnione dla aplikacji funkcje
   1f0e4:	0e c0       	rjmp	.+28     	; 0x1f102 <bfunc1>
   1f0e6:	00 00       	nop
	asm("jmp bfunc2");
   1f0e8:	0d c0       	rjmp	.+26     	; 0x1f104 <bfunc2>
	...

0001f0ec <__ctors_end>:
   1f0ec:	11 24       	eor	r1, r1
   1f0ee:	1f be       	out	0x3f, r1	; 63
   1f0f0:	cf ef       	ldi	r28, 0xFF	; 255
   1f0f2:	d1 e2       	ldi	r29, 0x21	; 33
   1f0f4:	de bf       	out	0x3e, r29	; 62
   1f0f6:	cd bf       	out	0x3d, r28	; 61
   1f0f8:	00 e0       	ldi	r16, 0x00	; 0
   1f0fa:	0c bf       	out	0x3c, r16	; 60
   1f0fc:	05 d0       	rcall	.+10     	; 0x1f108 <main>
   1f0fe:	07 c0       	rjmp	.+14     	; 0x1f10e <_exit>

0001f100 <__bad_interrupt>:
   1f100:	7f cf       	rjmp	.-258    	; 0x1f000 <__vectors>

0001f102 <bfunc1>:


#include <avr\io.h>

void bfunc1()
{
   1f102:	08 95       	ret

0001f104 <bfunc2>:
}

int bfunc2(int x)
{
	return x+1;
}
   1f104:	01 96       	adiw	r24, 0x01	; 1
   1f106:	08 95       	ret

0001f108 <main>:
}

int main()
{
	//Kod bootloadera
}
   1f108:	80 e0       	ldi	r24, 0x00	; 0
   1f10a:	90 e0       	ldi	r25, 0x00	; 0
   1f10c:	08 95       	ret

0001f10e <_exit>:
   1f10e:	f8 94       	cli

0001f110 <__stop_program>:
   1f110:	ff cf       	rjmp	.-2      	; 0x1f110 <__stop_program>
